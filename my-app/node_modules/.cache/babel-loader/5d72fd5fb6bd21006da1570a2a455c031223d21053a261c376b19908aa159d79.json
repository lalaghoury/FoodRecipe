{"ast":null,"code":"var _jsxFileName = \"/workspaces/FoodRecipe/my-app/src/components/AddRecipe/AddRecipe.jsx\",\n  _s = $RefreshSig$();\nimport React from \"react\";\nimport \"./AddRecipe.scss\";\nimport { UploadOutlined } from '@ant-design/icons';\nimport { Button, Form, Input, message, Upload } from 'antd';\nimport { useAddRecipe } from \"../../context/AddRecipeContext\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst props = {\n  name: \"file\",\n  action: \"https://run.mocky.io/v3/435e224c-44fb-4773-9faf-380c5e6a2188\",\n  headers: {\n    authorization: \"authorization-text\"\n  },\n  onChange(info) {\n    if (info.file.status !== \"uploading\") {\n      console.log(info.file, info.fileList);\n    }\n    if (info.file.status === \"done\") {\n      message.success(`${info.file.name} file uploaded successfully`);\n    } else if (info.file.status === \"error\") {\n      message.error(`${info.file.name} file upload failed.`);\n    }\n  },\n  progress: {\n    strokeColor: {\n      \"0%\": \"#108ee9\",\n      \"100%\": \"#87d068\"\n    },\n    strokeWidth: 3,\n    format: percent => percent && `${parseFloat(percent.toFixed(2))}%`\n  }\n};\nconst normFile = e => {\n  if (Array.isArray(e)) {\n    return e;\n  }\n  return e === null || e === void 0 ? void 0 : e.fileList;\n};\nfunction AddRecipe() {\n  _s();\n  const {\n    addRecipeFields\n  } = useAddRecipe();\n  console.log(addRecipeFields);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: /*#__PURE__*/_jsxDEV(_Fragment, {}, void 0, false)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 43,\n    columnNumber: 5\n  }, this);\n}\n_s(AddRecipe, \"W2RFEUp3+nPG3lRzhf5dpJVS69Y=\", false, function () {\n  return [useAddRecipe];\n});\n_c = AddRecipe;\nexport default AddRecipe;\nvar _c;\n$RefreshReg$(_c, \"AddRecipe\");","map":{"version":3,"names":["React","UploadOutlined","Button","Form","Input","message","Upload","useAddRecipe","Fragment","_Fragment","jsxDEV","_jsxDEV","props","name","action","headers","authorization","onChange","info","file","status","console","log","fileList","success","error","progress","strokeColor","strokeWidth","format","percent","parseFloat","toFixed","normFile","e","Array","isArray","AddRecipe","_s","addRecipeFields","children","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/workspaces/FoodRecipe/my-app/src/components/AddRecipe/AddRecipe.jsx"],"sourcesContent":["import React from \"react\";\nimport \"./AddRecipe.scss\";\nimport { UploadOutlined } from '@ant-design/icons';\nimport { Button, Form, Input, message, Upload } from 'antd';\nimport { useAddRecipe } from \"../../context/AddRecipeContext\";\n\nconst props = {\n  name: \"file\",\n  action: \"https://run.mocky.io/v3/435e224c-44fb-4773-9faf-380c5e6a2188\",\n  headers: {\n    authorization: \"authorization-text\",\n  },\n  onChange(info) {\n    if (info.file.status !== \"uploading\") {\n      console.log(info.file, info.fileList);\n    }\n    if (info.file.status === \"done\") {\n      message.success(`${info.file.name} file uploaded successfully`);\n    } else if (info.file.status === \"error\") {\n      message.error(`${info.file.name} file upload failed.`);\n    }\n  },\n  progress: {\n    strokeColor: {\n      \"0%\": \"#108ee9\",\n      \"100%\": \"#87d068\",\n    },\n    strokeWidth: 3,\n    format: (percent) => percent && `${parseFloat(percent.toFixed(2))}%`,\n  },\n};\n\nconst normFile = (e) => {\n  if (Array.isArray(e)) {\n    return e;\n  }\n  return e?.fileList;\n};\nfunction AddRecipe() {\n  const { addRecipeFields } = useAddRecipe();\n  console.log(addRecipeFields);\n  return (\n    <div>\n      <>\n        \n      </>\n    </div>\n  );\n}\n\nexport default AddRecipe;\n"],"mappings":";;AAAA,OAAOA,KAAK,MAAM,OAAO;AACzB,OAAO,kBAAkB;AACzB,SAASC,cAAc,QAAQ,mBAAmB;AAClD,SAASC,MAAM,EAAEC,IAAI,EAAEC,KAAK,EAAEC,OAAO,EAAEC,MAAM,QAAQ,MAAM;AAC3D,SAASC,YAAY,QAAQ,gCAAgC;AAAC,SAAAC,QAAA,IAAAC,SAAA;AAAA,SAAAC,MAAA,IAAAC,OAAA;AAE9D,MAAMC,KAAK,GAAG;EACZC,IAAI,EAAE,MAAM;EACZC,MAAM,EAAE,8DAA8D;EACtEC,OAAO,EAAE;IACPC,aAAa,EAAE;EACjB,CAAC;EACDC,QAAQA,CAACC,IAAI,EAAE;IACb,IAAIA,IAAI,CAACC,IAAI,CAACC,MAAM,KAAK,WAAW,EAAE;MACpCC,OAAO,CAACC,GAAG,CAACJ,IAAI,CAACC,IAAI,EAAED,IAAI,CAACK,QAAQ,CAAC;IACvC;IACA,IAAIL,IAAI,CAACC,IAAI,CAACC,MAAM,KAAK,MAAM,EAAE;MAC/Bf,OAAO,CAACmB,OAAO,CAAE,GAAEN,IAAI,CAACC,IAAI,CAACN,IAAK,6BAA4B,CAAC;IACjE,CAAC,MAAM,IAAIK,IAAI,CAACC,IAAI,CAACC,MAAM,KAAK,OAAO,EAAE;MACvCf,OAAO,CAACoB,KAAK,CAAE,GAAEP,IAAI,CAACC,IAAI,CAACN,IAAK,sBAAqB,CAAC;IACxD;EACF,CAAC;EACDa,QAAQ,EAAE;IACRC,WAAW,EAAE;MACX,IAAI,EAAE,SAAS;MACf,MAAM,EAAE;IACV,CAAC;IACDC,WAAW,EAAE,CAAC;IACdC,MAAM,EAAGC,OAAO,IAAKA,OAAO,IAAK,GAAEC,UAAU,CAACD,OAAO,CAACE,OAAO,CAAC,CAAC,CAAC,CAAE;EACpE;AACF,CAAC;AAED,MAAMC,QAAQ,GAAIC,CAAC,IAAK;EACtB,IAAIC,KAAK,CAACC,OAAO,CAACF,CAAC,CAAC,EAAE;IACpB,OAAOA,CAAC;EACV;EACA,OAAOA,CAAC,aAADA,CAAC,uBAADA,CAAC,CAAEX,QAAQ;AACpB,CAAC;AACD,SAASc,SAASA,CAAA,EAAG;EAAAC,EAAA;EACnB,MAAM;IAAEC;EAAgB,CAAC,GAAGhC,YAAY,CAAC,CAAC;EAC1Cc,OAAO,CAACC,GAAG,CAACiB,eAAe,CAAC;EAC5B,oBACE5B,OAAA;IAAA6B,QAAA,eACE7B,OAAA,CAAAF,SAAA,mBAEE;EAAC;IAAAgC,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACA,CAAC;AAEV;AAACN,EAAA,CAVQD,SAAS;EAAA,QACY9B,YAAY;AAAA;AAAAsC,EAAA,GADjCR,SAAS;AAYlB,eAAeA,SAAS;AAAC,IAAAQ,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}