{"ast":null,"code":"var _jsxFileName = \"/workspaces/FoodRecipe/my-app/src/context/SupabaseContext.jsx\",\n  _s = $RefreshSig$(),\n  _s2 = $RefreshSig$();\nimport React, { createContext, useContext, useState, use } from \"react\";\nimport { useUser, useSupabaseClient } from \"@supabase/auth-helpers-react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst CDNURL = \"https://przngajjwwvpyqdplgfs.supabase.co/storage/v1/object/public/images/\";\nconst SupabaseContext = /*#__PURE__*/createContext();\nexport const SupabaseProvider = ({\n  children\n}) => {\n  _s();\n  const [email, setEmail] = useState(\"\");\n  const [images, setImages] = useState([]);\n  const user = useUser();\n  const supabase = useSupabaseClient();\n  async function getImages() {\n    const {\n      data,\n      error\n    } = await supabase.storage.from(\"images\").list((user === null || user === void 0 ? void 0 : user.id) + \"/\", {\n      limit: 100,\n      offset: 0,\n      sortBy: {\n        column: \"name\",\n        order: \"asc\"\n      }\n    });\n    if (data !== null) {\n      console.log(\"data\", data);\n      setImages(data);\n    } else {\n      console.log(\"error\", error);\n    }\n  }\n  useEffect(() => {\n    if (user) {\n      getImages();\n    }\n  }, [user]);\n  async function signIn() {\n    const {\n      data,\n      error\n    } = await supabase.auth.signInWithOtp({\n      email\n    });\n    if (error) console.log(\"error\", error);\n  }\n  async function signOut() {\n    const {\n      error\n    } = await supabase.auth.signOut();\n    if (error) console.log(\"error\", error);\n  }\n  async function uploadImage(e) {\n    let file = e.target.files[0];\n    const {\n      data,\n      error\n    } = await supabase.storage.from(\"images\").upload(user.id + \"/\" + nanoid(), file);\n    if (data) {\n      getImages();\n    } else {\n      console.log(\"error\", error);\n    }\n  }\n  return /*#__PURE__*/_jsxDEV(SupabaseContext.Provider, {\n    value: {\n      signIn,\n      signOut,\n      uploadImage,\n      getImages,\n      images,\n      setImages\n    },\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 59,\n    columnNumber: 5\n  }, this);\n};\n_s(SupabaseProvider, \"BTH8AwAvYspyUXd0LE/yCLEWigU=\", false, function () {\n  return [useUser, useSupabaseClient];\n});\n_c = SupabaseProvider;\nexport const useSupabase = () => {\n  _s2();\n  const context = useContext(SupabaseContext);\n  if (!context) {\n    throw new Error(\"useCart must be used within a CartProvider\");\n  }\n  return context;\n};\n_s2(useSupabase, \"b9L3QQ+jgeyIrH0NfHrJ8nn7VMU=\");\nvar _c;\n$RefreshReg$(_c, \"SupabaseProvider\");","map":{"version":3,"names":["React","createContext","useContext","useState","use","useUser","useSupabaseClient","jsxDEV","_jsxDEV","CDNURL","SupabaseContext","SupabaseProvider","children","_s","email","setEmail","images","setImages","user","supabase","getImages","data","error","storage","from","list","id","limit","offset","sortBy","column","order","console","log","useEffect","signIn","auth","signInWithOtp","signOut","uploadImage","e","file","target","files","upload","nanoid","Provider","value","fileName","_jsxFileName","lineNumber","columnNumber","_c","useSupabase","_s2","context","Error","$RefreshReg$"],"sources":["/workspaces/FoodRecipe/my-app/src/context/SupabaseContext.jsx"],"sourcesContent":["import React, { createContext, useContext, useState, use } from \"react\";\nimport { useUser, useSupabaseClient } from \"@supabase/auth-helpers-react\";\n\n\nconst CDNURL =\n  \"https://przngajjwwvpyqdplgfs.supabase.co/storage/v1/object/public/images/\";\n\nconst SupabaseContext = createContext();\n\nexport const SupabaseProvider = ({ children }) => {\n  const [email, setEmail] = useState(\"\");\n  const [images, setImages] = useState([]);\n  const user = useUser();\n  const supabase = useSupabaseClient();\n\n  async function getImages() {\n    const { data, error } = await supabase.storage\n      .from(\"images\")\n      .list(user?.id + \"/\", {\n        limit: 100,\n        offset: 0,\n        sortBy: { column: \"name\", order: \"asc\" },\n      });\n\n    if (data !== null) {\n      console.log(\"data\", data);\n      setImages(data);\n    } else {\n      console.log(\"error\", error);\n    }\n  }\n  useEffect(() => {\n    if (user) {\n      getImages();\n    }\n  }, [user]);\n  async function signIn() {\n    const { data, error } = await supabase.auth.signInWithOtp({ email });\n    if (error) console.log(\"error\", error);\n  }\n  async function signOut() {\n    const { error } = await supabase.auth.signOut();\n    if (error) console.log(\"error\", error);\n  }\n  async function uploadImage(e) {\n    let file = e.target.files[0];\n\n    const { data, error } = await supabase.storage\n      .from(\"images\")\n      .upload(user.id + \"/\" + nanoid(), file);\n\n    if (data) {\n      getImages();\n    } else {\n      console.log(\"error\", error);\n    }\n  }\n  return (\n    <SupabaseContext.Provider\n      value={{ signIn, signOut, uploadImage, getImages, images, setImages }}\n    >\n      {children}\n    </SupabaseContext.Provider>\n  );\n};\n\nexport const useSupabase = () => {\n  const context = useContext(SupabaseContext);\n  if (!context) {\n    throw new Error(\"useCart must be used within a CartProvider\");\n  }\n  return context;\n};\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}