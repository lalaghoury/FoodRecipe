{"ast":null,"code":"var _jsxFileName = \"/workspaces/FoodRecipe/my-app/src/components/AddRecipe/RecipeForm.jsx\",\n  _s = $RefreshSig$();\nimport React from \"react\";\nimport { Select, Form, Input, Button, Upload, InputNumber, Space } from \"antd\";\nimport { useAddRecipe } from \"../../context/AddRecipeContext\";\nimport \"./RecipeForm.scss\";\nimport { CloseOutlined, MinusCircleOutlined, PlusOutlined } from \"@ant-design/icons\";\nimport { useSupabase } from \"../../context/SupabaseContext\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction RecipeForm() {\n  _s();\n  const {\n    normFile,\n    onFinish,\n    beforeUpload,\n    handleImageChange,\n    uploadButton,\n    form,\n    imageUrl\n  } = useAddRecipe();\n  const {\n    supabase,\n    user\n  } = useSupabase();\n  // console.log(images)\n\n  async function uploadImage(e) {\n    let file = e.target.files[0];\n    const {\n      data,\n      error\n    } = await supabase.storage.from(\"images\").upload(user.id + \"/\" + nanoid(), file);\n    if (data) {\n      getImages();\n    } else {\n      console.log(\"error\", error);\n    }\n  }\n  const [gonext, setGonext] = React.useState(false);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: /*#__PURE__*/_jsxDEV(Form, {\n      style: {\n        maxWidth: 700\n      },\n      className: \"recipe-form\",\n      form: form,\n      name: \"addRecipeForm\",\n      onFinish: onFinish,\n      layout: \"vertical\",\n      scrollToFirstError: true,\n      initialValues: {\n        cookingTime: 0,\n        prepTime: 0,\n        servings: 0,\n        cuisine: \"Select Collection\"\n      },\n      children: [/*#__PURE__*/_jsxDEV(Form.Item, {\n        label: \"Recipe image:\",\n        name: \"image\",\n        getValueFromEvent: normFile,\n        valuePropName: \"fileList\",\n        noStyle: true,\n        className: \"upload\",\n        children: /*#__PURE__*/_jsxDEV(Upload, {\n          name: \"avatar\",\n          accept: \"image/png, image/jpeg\",\n          listType: \"picture\",\n          className: \"avatar-uploader\",\n          showUploadList: true\n          // action=\"https://run.mocky.io/v3/435e224c-44fb-4773-9faf-380c5e6a2188\"\n          ,\n          beforeUpload: beforeUpload,\n          onChange: uploadImage,\n          children: imageUrl ? /*#__PURE__*/_jsxDEV(\"img\", {\n            src: imageUrl,\n            alt: \"avatar\",\n            style: {\n              height: \"200px\",\n              objectFit: \"fill\"\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 96,\n            columnNumber: 15\n          }, this) : uploadButton\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 85,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 77,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Form.Item, {\n        wrapperCol: {\n          offset: 8,\n          span: 16\n        },\n        children: /*#__PURE__*/_jsxDEV(Button, {\n          type: \"primary\",\n          htmlType: \"submit\",\n          className: \"bg-primary text-white form-btn\",\n          children: \"Submit\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 358,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 357,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 42,\n    columnNumber: 5\n  }, this);\n}\n_s(RecipeForm, \"afqk1csO1pvSAZnEOVGQlhED0SE=\", false, function () {\n  return [useAddRecipe, useSupabase];\n});\n_c = RecipeForm;\nexport default RecipeForm;\nvar _c;\n$RefreshReg$(_c, \"RecipeForm\");","map":{"version":3,"names":["React","Select","Form","Input","Button","Upload","InputNumber","Space","useAddRecipe","CloseOutlined","MinusCircleOutlined","PlusOutlined","useSupabase","jsxDEV","_jsxDEV","RecipeForm","_s","normFile","onFinish","beforeUpload","handleImageChange","uploadButton","form","imageUrl","supabase","user","uploadImage","e","file","target","files","data","error","storage","from","upload","id","nanoid","getImages","console","log","gonext","setGonext","useState","children","style","maxWidth","className","name","layout","scrollToFirstError","initialValues","cookingTime","prepTime","servings","cuisine","Item","label","getValueFromEvent","valuePropName","noStyle","accept","listType","showUploadList","onChange","src","alt","height","objectFit","fileName","_jsxFileName","lineNumber","columnNumber","wrapperCol","offset","span","type","htmlType","_c","$RefreshReg$"],"sources":["/workspaces/FoodRecipe/my-app/src/components/AddRecipe/RecipeForm.jsx"],"sourcesContent":["import React from \"react\";\nimport { Select, Form, Input, Button, Upload, InputNumber, Space } from \"antd\";\nimport { useAddRecipe } from \"../../context/AddRecipeContext\";\nimport \"./RecipeForm.scss\";\nimport {\n  CloseOutlined,\n  MinusCircleOutlined,\n  PlusOutlined,\n} from \"@ant-design/icons\";\nimport { useSupabase } from \"../../context/SupabaseContext\";\n\nfunction RecipeForm() {\n  const {\n    normFile,\n    onFinish,\n    beforeUpload,\n    handleImageChange,\n    uploadButton,\n    form,\n    imageUrl,\n  } = useAddRecipe();\n  const { supabase, user } = useSupabase();\n  // console.log(images)\n\n  async function uploadImage(e) {\n    let file = e.target.files[0];\n\n    const { data, error } = await supabase.storage\n      .from(\"images\")\n      .upload(user.id + \"/\" + nanoid(), file);\n\n    if (data) {\n      getImages();\n    } else {\n      console.log(\"error\", error);\n    }\n  }\n\n  const [gonext, setGonext] = React.useState(false);\n\n  return (\n    <div>\n      <Form\n        style={{\n          maxWidth: 700,\n        }}\n        className=\"recipe-form\"\n        form={form}\n        name=\"addRecipeForm\"\n        onFinish={onFinish}\n        layout=\"vertical\"\n        scrollToFirstError={true}\n        initialValues={{\n          cookingTime: 0,\n          prepTime: 0,\n          servings: 0,\n          cuisine: \"Select Collection\",\n        }}\n      >\n        {/*Input For Recipe Title */}\n        {/* <Form.Item\n          label=\"Recipe Title:\"\n          name=\"title\"\n          className=\"recipe-title\"\n          colon={true}\n          rules={[\n            { required: true, message: \"Please input the Recipe Title!\" },\n          ]}\n        >\n          <Input\n            placeholder=\"Enter Your Recipe name\"\n            className=\"antd-form-input\"\n          />\n        </Form.Item> */}\n\n        {/*Input For Recipe Image */}\n        <Form.Item\n          label=\"Recipe image:\"\n          name=\"image\"\n          getValueFromEvent={normFile}\n          valuePropName=\"fileList\"\n          noStyle\n          className=\"upload\"\n        >\n          <Upload\n            name=\"avatar\"\n            accept=\"image/png, image/jpeg\"\n            listType=\"picture\"\n            className=\"avatar-uploader\"\n            showUploadList={true}\n            // action=\"https://run.mocky.io/v3/435e224c-44fb-4773-9faf-380c5e6a2188\"\n            beforeUpload={beforeUpload}\n            onChange={uploadImage}\n          >\n            {imageUrl ? (\n              <img\n                src={imageUrl}\n                alt=\"avatar\"\n                style={{\n                  height: \"200px\",\n                  objectFit: \"fill\",\n                }}\n              />\n            ) : (\n              uploadButton\n            )}\n          </Upload>\n        </Form.Item>\n\n        {/*Input For Recipe Description */}\n        {/* <Form.Item\n          label=\"Description:\"\n          name=\"description\"\n          rules={[\n            { required: true, message: \"Please input the Recipe Description!\" },\n          ]}\n        >\n          <Input.TextArea\n            showCount\n            maxLength={100}\n            placeholder=\"Introduce your recipe\"\n            className=\"antd-form-input\"\n          />\n        </Form.Item> */}\n\n        {/*Input For Recipe Ingredientss */}\n        {/* <Form.Item\n          label=\"Ingredients:\"\n          name=\"ingredients\"\n          rules={[\n            { required: true, message: \"Please input the Recipe Ingredients!\" },\n          ]}\n        >\n          <Form.List name=\"ingredients\">\n            {(fields, { add, remove }) => (\n              <>\n                {fields.map(({ key, name, ...restField }) => (\n                  <Space\n                    key={key}\n                    style={{\n                      display: \"flex\",\n                      marginBottom: 8,\n                    }}\n                    align=\"baseline\"\n                  >\n                    <Form.Item\n                      {...restField}\n                      name={[name, \"ingredient\"]}\n                      rules={[\n                        {\n                          required: true,\n                          message: \"Missing Ingredient name\",\n                        },\n                      ]}\n                    >\n                      <Input placeholder=\"Add ingredients\" />\n                    </Form.Item>\n                    <MinusCircleOutlined onClick={() => remove(name)} />\n                  </Space>\n                ))}\n                <Form.Item>\n                  <Button\n                    type=\"dashed\"\n                    onClick={() => add()}\n                    block\n                    icon={<PlusOutlined />}\n                  >\n                    Add field\n                  </Button>\n                </Form.Item>\n              </>\n            )}\n          </Form.List>\n        </Form.Item> */}\n\n        {/*Input For Recipe Instructions */}\n        {/* <Form.Item label=\"Instructions\">\n          <Form.List name=\"instructions\">\n            {(subFields, subOpt) => (\n              <div\n                style={{\n                  display: \"flex\",\n                  flexDirection: \"column\",\n                  rowGap: 16,\n                }}\n              >\n                {subFields.map((subField) => (\n                  <Space key={subField.key}>\n                    <Form.Item noStyle name={[subField.name, \"instruction\"]}>\n                      <Input placeholder=\"Write Instructions\" />\n                    </Form.Item>\n                    <CloseOutlined\n                      onClick={() => {\n                        subOpt.remove(subField.name);\n                      }}\n                    />\n                  </Space>\n                ))}\n                <Button type=\"dashed\" onClick={() => subOpt.add()}>\n                  +\n                </Button>\n              </div>\n            )}\n          </Form.List>\n        </Form.Item> */}\n\n        {/*Input For Recipe Servings*/}\n        {/* <Form.Item\n          label=\"Servings:\"\n          name=\"serving\"\n          rules={[\n            { required: true, message: \"Please input the Recipe Serving!\" },\n          ]}\n        >\n          <Input placeholder=\"#\" className=\"antd-form-input\" />\n        </Form.Item> */}\n\n        {/*Input For Recipe Cooking Time*/}\n        {/* <Form.Item\n          label=\"Cooking Time:\"\n          name=\"cooking\"\n          className=\"cooking-time\"\n          rules={[\n            {\n              required: true,\n              message: \"Please input the Recipe Cooking time!\",\n            },\n          ]}\n        >\n          <InputNumber\n            placeholder=\"Hours 0\"\n            className=\"cooking-time-input antd-form-input\"\n          />\n        </Form.Item> */}\n\n        {/*Input For Recipe Prep Time*/}\n        {/* <Form.Item\n          label=\"Prep Time:\"\n          name=\"prep\"\n          className=\"prep-time\"\n          rules={[\n            {\n              required: true,\n              message: \"Please input the Recipe Preparation time!\",\n            },\n          ]}\n        >\n          <InputNumber\n            placeholder=\"Hours 0\"\n            className=\"prep-time-input antd-form-input\"\n          />\n        </Form.Item> */}\n\n        {/*Input For Recipe cuisine*/}\n        {/* <Form.Item\n          label=\"Cuisine:\"\n          name=\"cuisine\"\n          rules={[{ required: true, message: \"Please select the cuisine!\" }]}\n        >\n          <Select\n            // defaultValue={\"Italian\"}\n            placeholder=\"Italian\"\n            style={{ width: 200 }}\n            className=\"antd-form-input\"\n          >\n            <Select.Option value=\"Thai\">Thai</Select.Option>\n            <Select.Option value=\"Chinese\">Chinese</Select.Option>\n            <Select.Option value=\"Italian\">Italian</Select.Option>\n          </Select>\n        </Form.Item> */}\n\n        {/*Input For Recipe Nutrition Facts*/}\n        {/* <div className=\"facts\">\n          <Form.Item\n            label=\"Calories:\"\n            name=\"calories\"\n            rules={[{ required: true, message: \"Please enter the calories!\" }]}\n            className=\"calories\"\n          >\n            <Input placeholder=\"#\" className=\"antd-form-input less\" />\n          </Form.Item>\n          <Form.Item\n            label=\"Protiens:\"\n            name=\"protiens\"\n            rules={[{ required: true, message: \"Please enter the Protiens!\" }]}\n          >\n            <Input placeholder=\"#\" className=\"antd-form-input less\" />\n          </Form.Item>\n          <Form.Item\n            label=\"Fats:\"\n            name=\"fats\"\n            rules={[{ required: true, message: \"Please enter the Fats!\" }]}\n          >\n            <Input placeholder=\"#\" className=\"antd-form-input less\" />\n          </Form.Item>\n          <Form.Item\n            label=\"Carbohydrates:\"\n            name=\"carbohydrates\"\n            rules={[\n              { required: true, message: \"Please enter the Carbohydrates!\" },\n            ]}\n          >\n            <Input placeholder=\"#\" className=\"antd-form-input less\" />\n          </Form.Item>\n          <Form.Item\n            label=\"Fats:\"\n            name=\"fats\"\n            rules={[{ required: true, message: \"Please enter the Fats!\" }]}\n          >\n            <Input placeholder=\"#\" className=\"antd-form-input less\" />\n          </Form.Item>\n          <Form.Item\n            label=\"Protiens:\"\n            name=\"protiens\"\n            rules={[{ required: true, message: \"Please enter the Protiens!\" }]}\n          >\n            <Input placeholder=\"#\" className=\"antd-form-input less\" />\n          </Form.Item>\n          <Form.Item\n            label=\"Calories:\"\n            name=\"calories\"\n            rules={[{ required: true, message: \"Please enter the Calories!\" }]}\n          >\n            <Input placeholder=\"#\" className=\"antd-form-input less\" />\n          </Form.Item>\n          <Form.Item\n            label=\"Carbohydrates:\"\n            name=\"carbohydrates\"\n            rules={[\n              { required: true, message: \"Please enter the Carbohydrates!\" },\n            ]}\n          >\n            <Input placeholder=\"#\" className=\"antd-form-input less\" />\n          </Form.Item>\n        </div> */}\n\n        {/*Input For Recipe Collection*/}\n        {/* <Form.Item\n          label=\"Collection:\"\n          name=\"collection\"\n          rules={[\n            { required: true, message: \"Please select the Recipe Collection!\" },\n          ]}\n        >\n          <Select\n            // defaultValue={\"Select Collection\"}\n            placeholder=\"Select Collection\"\n            style={{ width: 200 }}\n            className=\"antd-form-input\"\n          >\n            <Select.Option value=\"New Collection\">New Collection</Select.Option>\n            <Select.Option value=\"Cook Book\">Cook Book</Select.Option>\n            <Select.Option value=\"My Recipe\">My Recipe</Select.Option>\n          </Select>\n        </Form.Item> */}\n\n        <Form.Item wrapperCol={{ offset: 8, span: 16 }}>\n          <Button\n            type=\"primary\"\n            htmlType=\"submit\"\n            className=\"bg-primary text-white form-btn\"\n          >\n            Submit\n          </Button>\n        </Form.Item>\n      </Form>\n    </div>\n  );\n}\n\nexport default RecipeForm;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}