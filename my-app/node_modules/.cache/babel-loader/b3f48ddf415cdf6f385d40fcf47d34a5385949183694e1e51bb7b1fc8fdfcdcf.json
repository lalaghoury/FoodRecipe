{"ast":null,"code":"var _jsxFileName = \"/workspaces/FoodRecipe/my-app/src/Exp.jsx\";\nimport React from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst supabaseUrl = 'https://cyvtgpuztblppqsydqjp.supabase.co';\nconst supabaseKey = 'eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpc3MiOiJzdXBhYmFzZSIsInJlZiI6ImN5dnRncHV6dGJscHBxc3lkcWpwIiwicm9sZSI6ImFub24iLCJpYXQiOjE3MDYyNjk0NjMsImV4cCI6MjAyMTg0NTQ2M30.hh3cFM_LrK9tNXv_2piPFk20MhcvQT--wgkYpnCbba8';\nconst {\n  data,\n  error\n} = await supabase.storage.createBucket('test-bucket', {\n  public: true,\n  allowedMimeTypes: ['image/*'],\n  maxFileSize: '50MB'\n});\nif (error) {\n  console.error(error);\n} else {\n  console.log('Bucket created successfully!');\n}\nexport default function Exp() {\n  const handleUpload = async e => {\n    let file;\n    if (e.target.files) {\n      file = e.target.files[0];\n    }\n    const {\n      data,\n      error\n    } = await supabase.storage.from('images').upload('public/' + file.name, file);\n    if (data) {\n      console.log(data);\n    } else if (error) {\n      console.log(error);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: /*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Exp\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 38,\n    columnNumber: 5\n  }, this);\n}\n_c = Exp;\nvar _c;\n$RefreshReg$(_c, \"Exp\");","map":{"version":3,"names":["React","jsxDEV","_jsxDEV","supabaseUrl","supabaseKey","data","error","supabase","storage","createBucket","public","allowedMimeTypes","maxFileSize","console","log","Exp","handleUpload","e","file","target","files","from","upload","name","children","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/workspaces/FoodRecipe/my-app/src/Exp.jsx"],"sourcesContent":["import React from \"react\";\nconst supabaseUrl = 'https://cyvtgpuztblppqsydqjp.supabase.co'\nconst supabaseKey = 'eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpc3MiOiJzdXBhYmFzZSIsInJlZiI6ImN5dnRncHV6dGJscHBxc3lkcWpwIiwicm9sZSI6ImFub24iLCJpYXQiOjE3MDYyNjk0NjMsImV4cCI6MjAyMTg0NTQ2M30.hh3cFM_LrK9tNXv_2piPFk20MhcvQT--wgkYpnCbba8'\n\n\n\nconst { data, error } = await supabase.storage.createBucket(\n  'test-bucket',\n  {\n    public: true,\n    allowedMimeTypes: ['image/*'],\n    maxFileSize: '50MB'\n  }\n);\n\nif (error) {\n  console.error(error);\n} else {\n  console.log('Bucket created successfully!');\n}\n\n\nexport default function Exp() {\n  const handleUpload = async (e) => {\n    let file;\n\n    if (e.target.files) {\n      file = e.target.files[0];\n    }\n    const { data, error } = await supabase.storage.from('images').upload('public/' + file.name, file);\n    if (data) {\n      console.log(data)\n    } else if (error) {\n      console.log(error)\n    }\n  };\n  return (\n    <div>\n      <h1>Exp</h1>\n    </div>\n  );\n}"],"mappings":";AAAA,OAAOA,KAAK,MAAM,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAC1B,MAAMC,WAAW,GAAG,0CAA0C;AAC9D,MAAMC,WAAW,GAAG,kNAAkN;AAItO,MAAM;EAAEC,IAAI;EAAEC;AAAM,CAAC,GAAG,MAAMC,QAAQ,CAACC,OAAO,CAACC,YAAY,CACzD,aAAa,EACb;EACEC,MAAM,EAAE,IAAI;EACZC,gBAAgB,EAAE,CAAC,SAAS,CAAC;EAC7BC,WAAW,EAAE;AACf,CACF,CAAC;AAED,IAAIN,KAAK,EAAE;EACTO,OAAO,CAACP,KAAK,CAACA,KAAK,CAAC;AACtB,CAAC,MAAM;EACLO,OAAO,CAACC,GAAG,CAAC,8BAA8B,CAAC;AAC7C;AAGA,eAAe,SAASC,GAAGA,CAAA,EAAG;EAC5B,MAAMC,YAAY,GAAG,MAAOC,CAAC,IAAK;IAChC,IAAIC,IAAI;IAER,IAAID,CAAC,CAACE,MAAM,CAACC,KAAK,EAAE;MAClBF,IAAI,GAAGD,CAAC,CAACE,MAAM,CAACC,KAAK,CAAC,CAAC,CAAC;IAC1B;IACA,MAAM;MAAEf,IAAI;MAAEC;IAAM,CAAC,GAAG,MAAMC,QAAQ,CAACC,OAAO,CAACa,IAAI,CAAC,QAAQ,CAAC,CAACC,MAAM,CAAC,SAAS,GAAGJ,IAAI,CAACK,IAAI,EAAEL,IAAI,CAAC;IACjG,IAAIb,IAAI,EAAE;MACRQ,OAAO,CAACC,GAAG,CAACT,IAAI,CAAC;IACnB,CAAC,MAAM,IAAIC,KAAK,EAAE;MAChBO,OAAO,CAACC,GAAG,CAACR,KAAK,CAAC;IACpB;EACF,CAAC;EACD,oBACEJ,OAAA;IAAAsB,QAAA,eACEtB,OAAA;MAAAsB,QAAA,EAAI;IAAG;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI;EAAC;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACT,CAAC;AAEV;AAACC,EAAA,GAnBuBd,GAAG;AAAA,IAAAc,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}