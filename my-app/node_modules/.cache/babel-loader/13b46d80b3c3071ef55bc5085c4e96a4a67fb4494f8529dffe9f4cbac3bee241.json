{"ast":null,"code":"var _jsxFileName = \"/workspaces/FoodRecipe/my-app/src/data/Data.jsx\",\n  _s = $RefreshSig$();\n// data.js\n\nimport React, { useState } from \"react\";\n\n// Initial recipe data\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst initialRecipeData = [{\n  id: 1,\n  name: \"Onion Rings\",\n  username: \"Alex Martin\",\n  image: \"https://i.ibb.co/Fs5k7RD/s-homepage-recipe-row-36700-erin-me-1384569-a-93-f-4-fde-a-6-ce-3-e-21-b-69-b-04-fa-1.png\",\n  userimage: \"https://i.ibb.co/yhrMpQz/s-homepage-recipe-row-user-icon.png\"\n}\n// ... more recipes\n];\n\n// Create a function component that uses the state hook\nexport const RecipeDataContext = () => {\n  _s();\n  const [recipeData, setRecipeData] = useState(initialRecipeData);\n\n  // You can return the data or use it in any other way as needed\n  return /*#__PURE__*/_jsxDEV(React.Fragment, {\n    children: recipeData\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 24,\n    columnNumber: 5\n  }, this);\n};\n_s(RecipeDataContext, \"ohE/ZFjEcAQdbqHHYohF8U7+8rE=\");\n_c = RecipeDataContext;\nvar _c;\n$RefreshReg$(_c, \"RecipeDataContext\");","map":{"version":3,"names":["React","useState","jsxDEV","_jsxDEV","initialRecipeData","id","name","username","image","userimage","RecipeDataContext","_s","recipeData","setRecipeData","Fragment","children","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/workspaces/FoodRecipe/my-app/src/data/Data.jsx"],"sourcesContent":["// data.js\n\nimport React, { useState } from \"react\";\n\n// Initial recipe data\nconst initialRecipeData = [\n  {\n    id: 1,\n    name: \"Onion Rings\",\n    username: \"Alex Martin\",\n    image:\n      \"https://i.ibb.co/Fs5k7RD/s-homepage-recipe-row-36700-erin-me-1384569-a-93-f-4-fde-a-6-ce-3-e-21-b-69-b-04-fa-1.png\",\n    userimage: \"https://i.ibb.co/yhrMpQz/s-homepage-recipe-row-user-icon.png\",\n  },\n  // ... more recipes\n];\n\n// Create a function component that uses the state hook\nexport const RecipeDataContext = () => {\n  const [recipeData, setRecipeData] = useState(initialRecipeData);\n\n  // You can return the data or use it in any other way as needed\n  return (\n    <React.Fragment>\n      {recipeData}\n    </React.Fragment>\n  );\n};\n"],"mappings":";;AAAA;;AAEA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;;AAEvC;AAAA,SAAAC,MAAA,IAAAC,OAAA;AACA,MAAMC,iBAAiB,GAAG,CACxB;EACEC,EAAE,EAAE,CAAC;EACLC,IAAI,EAAE,aAAa;EACnBC,QAAQ,EAAE,aAAa;EACvBC,KAAK,EACH,oHAAoH;EACtHC,SAAS,EAAE;AACb;AACA;AAAA,CACD;;AAED;AACA,OAAO,MAAMC,iBAAiB,GAAGA,CAAA,KAAM;EAAAC,EAAA;EACrC,MAAM,CAACC,UAAU,EAAEC,aAAa,CAAC,GAAGZ,QAAQ,CAACG,iBAAiB,CAAC;;EAE/D;EACA,oBACED,OAAA,CAACH,KAAK,CAACc,QAAQ;IAAAC,QAAA,EACZH;EAAU;IAAAI,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACG,CAAC;AAErB,CAAC;AAACR,EAAA,CATWD,iBAAiB;AAAAU,EAAA,GAAjBV,iBAAiB;AAAA,IAAAU,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}