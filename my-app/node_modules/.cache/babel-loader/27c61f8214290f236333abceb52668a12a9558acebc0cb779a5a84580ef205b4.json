{"ast":null,"code":"var _jsxFileName = \"/workspaces/FoodRecipe/my-app/src/Exp.jsx\",\n  _s = $RefreshSig$();\nimport React from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction Exp() {\n  _s();\n  const [image, setImage] = React.useState(\"\");\n  const handleImageChange = e => {\n    console.log(\"all files\", e.target.files);\n    console.log(\"file [0]\", e.target.files[0]);\n    setImage(e.target.files[0]);\n  };\n  const handleAPI = () => {\n    const formData = new FormData();\n    formData.append(\"image\", image);\n    axios.post();\n    fetch(\"http://localhost:5000/predict\", {\n      method: \"POST\",\n      body: formData\n    }).then(res => res.json()).then(data => console.log(data));\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"file\",\n      accept: \"image/*\",\n      name: \"image\",\n      onChange: handleImageChange\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 23,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: handleAPI,\n      children: \"Submit\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 22,\n    columnNumber: 5\n  }, this);\n}\n_s(Exp, \"kD9UrQSWR+ZcrmqWJjEkvApuaqw=\");\n_c = Exp;\nexport default Exp;\nvar _c;\n$RefreshReg$(_c, \"Exp\");","map":{"version":3,"names":["React","jsxDEV","_jsxDEV","Exp","_s","image","setImage","useState","handleImageChange","e","console","log","target","files","handleAPI","formData","FormData","append","axios","post","fetch","method","body","then","res","json","data","children","type","accept","name","onChange","fileName","_jsxFileName","lineNumber","columnNumber","onClick","_c","$RefreshReg$"],"sources":["/workspaces/FoodRecipe/my-app/src/Exp.jsx"],"sourcesContent":["import React from \"react\";\n\nfunction Exp() {\n  const [image, setImage] = React.useState(\"\");\n  const handleImageChange = (e) => {\n    console.log(\"all files\", e.target.files);\n    console.log(\"file [0]\", e.target.files[0]);\n    setImage(e.target.files[0]);\n  };\n  const handleAPI = () => {\n    const formData = new FormData();\n    formData.append(\"image\", image);\n    axios.post()\n    fetch(\"http://localhost:5000/predict\", {\n      method: \"POST\",\n      body: formData,\n    })\n      .then((res) => res.json())\n      .then((data) => console.log(data));\n  }\n  return (\n    <div>\n      <input\n        type=\"file\"\n        accept=\"image/*\"\n        name=\"image\"\n        onChange={handleImageChange}\n      />\n      <button onClick={handleAPI}>Submit</button>\n    </div>\n  );\n}\n\nexport default Exp;\n"],"mappings":";;AAAA,OAAOA,KAAK,MAAM,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE1B,SAASC,GAAGA,CAAA,EAAG;EAAAC,EAAA;EACb,MAAM,CAACC,KAAK,EAAEC,QAAQ,CAAC,GAAGN,KAAK,CAACO,QAAQ,CAAC,EAAE,CAAC;EAC5C,MAAMC,iBAAiB,GAAIC,CAAC,IAAK;IAC/BC,OAAO,CAACC,GAAG,CAAC,WAAW,EAAEF,CAAC,CAACG,MAAM,CAACC,KAAK,CAAC;IACxCH,OAAO,CAACC,GAAG,CAAC,UAAU,EAAEF,CAAC,CAACG,MAAM,CAACC,KAAK,CAAC,CAAC,CAAC,CAAC;IAC1CP,QAAQ,CAACG,CAAC,CAACG,MAAM,CAACC,KAAK,CAAC,CAAC,CAAC,CAAC;EAC7B,CAAC;EACD,MAAMC,SAAS,GAAGA,CAAA,KAAM;IACtB,MAAMC,QAAQ,GAAG,IAAIC,QAAQ,CAAC,CAAC;IAC/BD,QAAQ,CAACE,MAAM,CAAC,OAAO,EAAEZ,KAAK,CAAC;IAC/Ba,KAAK,CAACC,IAAI,CAAC,CAAC;IACZC,KAAK,CAAC,+BAA+B,EAAE;MACrCC,MAAM,EAAE,MAAM;MACdC,IAAI,EAAEP;IACR,CAAC,CAAC,CACCQ,IAAI,CAAEC,GAAG,IAAKA,GAAG,CAACC,IAAI,CAAC,CAAC,CAAC,CACzBF,IAAI,CAAEG,IAAI,IAAKhB,OAAO,CAACC,GAAG,CAACe,IAAI,CAAC,CAAC;EACtC,CAAC;EACD,oBACExB,OAAA;IAAAyB,QAAA,gBACEzB,OAAA;MACE0B,IAAI,EAAC,MAAM;MACXC,MAAM,EAAC,SAAS;MAChBC,IAAI,EAAC,OAAO;MACZC,QAAQ,EAAEvB;IAAkB;MAAAwB,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAC7B,CAAC,eACFjC,OAAA;MAAQkC,OAAO,EAAEtB,SAAU;MAAAa,QAAA,EAAC;IAAM;MAAAK,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAQ,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACxC,CAAC;AAEV;AAAC/B,EAAA,CA7BQD,GAAG;AAAAkC,EAAA,GAAHlC,GAAG;AA+BZ,eAAeA,GAAG;AAAC,IAAAkC,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}