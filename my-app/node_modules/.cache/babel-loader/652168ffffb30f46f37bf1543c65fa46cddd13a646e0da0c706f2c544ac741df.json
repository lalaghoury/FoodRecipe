{"ast":null,"code":"import{Form}from\"antd\";import{createContext,useContext,useState}from\"react\";import{nanoid}from\"nanoid\";import{LoadingOutlined,PlusOutlined}from\"@ant-design/icons\";import{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";const AddRecipeContext=/*#__PURE__*/createContext();export const AddRecipeProvider=_ref=>{let{children}=_ref;const[loading,setLoading]=useState(false);const[imageUrl,setImageUrl]=useState(null);const[form]=Form.useForm();function loadFromLocalStorage(key){try{const item=localStorage.getItem(key);if(!item){return[];// throw new Error(\"Item not found in local storage\");\n}return JSON.parse(item);}catch(error){console.error(\"Error retrieving item from local storage:\",error);}}function saveToLocalStorage(key,value){try{localStorage.setItem(key,JSON.stringify(value));}catch(error){console.error(\"Error saving item to local storage:\",error);}}function getAllRecepies(){return loadFromLocalStorage(\"recepies\");}function addRecepie(recepie){let recepies=getAllRecepies();// recepies.push(recepie);\nrecepies=[...recepies,recepie];saveToLocalStorage(\"recepies\",recepies);}const normFile=e=>{if(Array.isArray(e)){return e;}return e&&e.fileList;};// const handleImageChang = (e) => {\n//   let reader = new FileReader();\n//   let file = e.target.files[0];\n//   reader.onloadend = () => {\n//     this.setState({\n//       file: file,\n//       setImageUrl: reader.result,\n//     });\n//   };\n//   reader.readAsDataURL(file);\n// };\nconst onFinish=e=>{const allRecipies=getAllRecepies();const newRecipe={...e,id:nanoid(),image:imageUrl};// Create a single recipe object\nconst updatedRecipes=[...allRecipies,newRecipe];console.log(e);console.log(updatedRecipes);addRecepie(newRecipe);// Pass the single recipe object to addRecepie\nconsole.log(updatedRecipes);saveToLocalStorage(\"recepies\",updatedRecipes);};const getBase64=(img,callback)=>{const reader=new FileReader();reader.addEventListener(\"load\",()=>callback(reader.result));reader.readAsDataURL(img);console.log(reader.readAsDataURL(img));};const beforeUpload=e=>{const isImage=e.type.startsWith(\"image/\");if(!isImage){message.error(\"You can only upload image files!\");}return isImage;};const handleImageChange=e=>{if(e.file.status===\"uploading\"){setLoading(true);return;}if(e.file.status===\"done\"){let reader=new FileReader();let file=e.target.files[0];reader.onloadend=()=>{this.setState({file:file,setImageUrl:reader.result});};}};const uploadButton=/*#__PURE__*/_jsxs(\"div\",{style:{textAlign:\"center\"},children:[loading?/*#__PURE__*/_jsx(LoadingOutlined,{}):null,/*#__PURE__*/_jsxs(\"div\",{children:[/*#__PURE__*/_jsx(PlusOutlined,{}),\" Upload\"]})]});return/*#__PURE__*/_jsx(AddRecipeContext.Provider,{value:{saveToLocalStorage,loadFromLocalStorage,getAllRecepies,addRecepie,normFile,onFinish,getBase64,beforeUpload,handleImageChange,uploadButton,form,imageUrl,setImageUrl,loading,setLoading},children:children});};export const useAddRecipe=()=>{const context=useContext(AddRecipeContext);if(!context){throw new Error(\"useAddRecipe must be used within a AddRecipeProvider\");}return context;};","map":{"version":3,"names":["Form","createContext","useContext","useState","nanoid","LoadingOutlined","PlusOutlined","jsx","_jsx","jsxs","_jsxs","AddRecipeContext","AddRecipeProvider","_ref","children","loading","setLoading","imageUrl","setImageUrl","form","useForm","loadFromLocalStorage","key","item","localStorage","getItem","JSON","parse","error","console","saveToLocalStorage","value","setItem","stringify","getAllRecepies","addRecepie","recepie","recepies","normFile","e","Array","isArray","fileList","onFinish","allRecipies","newRecipe","id","image","updatedRecipes","log","getBase64","img","callback","reader","FileReader","addEventListener","result","readAsDataURL","beforeUpload","isImage","type","startsWith","message","handleImageChange","file","status","target","files","onloadend","setState","uploadButton","style","textAlign","Provider","useAddRecipe","context","Error"],"sources":["/workspaces/FoodRecipe/my-app/src/context/AddRecipeContext.jsx"],"sourcesContent":["import { Form } from \"antd\";\nimport { createContext, useContext, useState } from \"react\";\nimport { nanoid } from \"nanoid\";\nimport { LoadingOutlined, PlusOutlined } from \"@ant-design/icons\";\n\nconst AddRecipeContext = createContext();\n\nexport const AddRecipeProvider = ({ children }) => {\n  const [loading, setLoading] = useState(false);\n  const [imageUrl, setImageUrl] = useState(null);\n  const [form] = Form.useForm();\n\n  function loadFromLocalStorage(key) {\n    try {\n      const item = localStorage.getItem(key);\n      if (!item) {\n        return [];\n        // throw new Error(\"Item not found in local storage\");\n      }\n      return JSON.parse(item);\n    } catch (error) {\n      console.error(\"Error retrieving item from local storage:\", error);\n    }\n  }\n\n  function saveToLocalStorage(key, value) {\n    try {\n      localStorage.setItem(key, JSON.stringify(value));\n    } catch (error) {\n      console.error(\"Error saving item to local storage:\", error);\n    }\n  }\n\n  function getAllRecepies() {\n    return loadFromLocalStorage(\"recepies\");\n  }\n\n  function addRecepie(recepie) {\n    let recepies = getAllRecepies();\n    // recepies.push(recepie);\n    recepies = [...recepies, recepie];\n    saveToLocalStorage(\"recepies\", recepies);\n  }\n\n  const normFile = (e) => {\n    if (Array.isArray(e)) {\n      return e;\n    }\n    return e && e.fileList;\n  };\n\n  // const handleImageChang = (e) => {\n  //   let reader = new FileReader();\n  //   let file = e.target.files[0];\n\n  //   reader.onloadend = () => {\n  //     this.setState({\n  //       file: file,\n  //       setImageUrl: reader.result,\n  //     });\n  //   };\n\n  //   reader.readAsDataURL(file);\n  // };\n\n  const onFinish = (e) => {\n    const allRecipies = getAllRecepies();\n    const newRecipe = { ...e, id: nanoid(), image: imageUrl }; // Create a single recipe object\n    const updatedRecipes = [...allRecipies, newRecipe];\n    console.log(e);\n    console.log(updatedRecipes);\n    addRecepie(newRecipe); // Pass the single recipe object to addRecepie\n    console.log(updatedRecipes);\n    saveToLocalStorage(\"recepies\", updatedRecipes);\n  };\n\n  const getBase64 = (img, callback) => {\n    const reader = new FileReader();\n    reader.addEventListener(\"load\", () => callback(reader.result));\n    reader.readAsDataURL(img);\n    console.log(reader.readAsDataURL(img));\n  };\n\n  const beforeUpload = (e) => {\n    const isImage = e.type.startsWith(\"image/\");\n    if (!isImage) {\n      message.error(\"You can only upload image files!\");\n    }\n    return isImage;\n  };\n\n  const handleImageChange = (e) => {\n    if (e.file.status === \"uploading\") {\n      setLoading(true);\n      return;\n    }\n    if (e.file.status === \"done\") {\n      let reader = new FileReader();\n      let file = e.target.files[0];\n\n      reader.onloadend = () => {\n        this.setState({\n          file: file,\n          setImageUrl: reader.result,\n        });\n      };\n    }\n  };\n  const uploadButton = (\n    <div style={{ textAlign: \"center\" }}>\n      {loading ? <LoadingOutlined /> : null}\n      <div>\n        <PlusOutlined /> Upload\n      </div>\n    </div>\n  );\n\n  return (\n    <AddRecipeContext.Provider\n      value={{\n        saveToLocalStorage,\n        loadFromLocalStorage,\n        getAllRecepies,\n        addRecepie,\n        normFile,\n        onFinish,\n        getBase64,\n        beforeUpload,\n        handleImageChange,\n        uploadButton,\n        form,\n        imageUrl,\n        setImageUrl,\n        loading,\n        setLoading,\n      }}\n    >\n      {children}\n    </AddRecipeContext.Provider>\n  );\n};\n\nexport const useAddRecipe = () => {\n  const context = useContext(AddRecipeContext);\n  if (!context) {\n    throw new Error(\"useAddRecipe must be used within a AddRecipeProvider\");\n  }\n  return context;\n};\n"],"mappings":"AAAA,OAASA,IAAI,KAAQ,MAAM,CAC3B,OAASC,aAAa,CAAEC,UAAU,CAAEC,QAAQ,KAAQ,OAAO,CAC3D,OAASC,MAAM,KAAQ,QAAQ,CAC/B,OAASC,eAAe,CAAEC,YAAY,KAAQ,mBAAmB,CAAC,OAAAC,GAAA,IAAAC,IAAA,gCAAAC,IAAA,IAAAC,KAAA,yBAElE,KAAM,CAAAC,gBAAgB,cAAGV,aAAa,CAAC,CAAC,CAExC,MAAO,MAAM,CAAAW,iBAAiB,CAAGC,IAAA,EAAkB,IAAjB,CAAEC,QAAS,CAAC,CAAAD,IAAA,CAC5C,KAAM,CAACE,OAAO,CAAEC,UAAU,CAAC,CAAGb,QAAQ,CAAC,KAAK,CAAC,CAC7C,KAAM,CAACc,QAAQ,CAAEC,WAAW,CAAC,CAAGf,QAAQ,CAAC,IAAI,CAAC,CAC9C,KAAM,CAACgB,IAAI,CAAC,CAAGnB,IAAI,CAACoB,OAAO,CAAC,CAAC,CAE7B,QAAS,CAAAC,oBAAoBA,CAACC,GAAG,CAAE,CACjC,GAAI,CACF,KAAM,CAAAC,IAAI,CAAGC,YAAY,CAACC,OAAO,CAACH,GAAG,CAAC,CACtC,GAAI,CAACC,IAAI,CAAE,CACT,MAAO,EAAE,CACT;AACF,CACA,MAAO,CAAAG,IAAI,CAACC,KAAK,CAACJ,IAAI,CAAC,CACzB,CAAE,MAAOK,KAAK,CAAE,CACdC,OAAO,CAACD,KAAK,CAAC,2CAA2C,CAAEA,KAAK,CAAC,CACnE,CACF,CAEA,QAAS,CAAAE,kBAAkBA,CAACR,GAAG,CAAES,KAAK,CAAE,CACtC,GAAI,CACFP,YAAY,CAACQ,OAAO,CAACV,GAAG,CAAEI,IAAI,CAACO,SAAS,CAACF,KAAK,CAAC,CAAC,CAClD,CAAE,MAAOH,KAAK,CAAE,CACdC,OAAO,CAACD,KAAK,CAAC,qCAAqC,CAAEA,KAAK,CAAC,CAC7D,CACF,CAEA,QAAS,CAAAM,cAAcA,CAAA,CAAG,CACxB,MAAO,CAAAb,oBAAoB,CAAC,UAAU,CAAC,CACzC,CAEA,QAAS,CAAAc,UAAUA,CAACC,OAAO,CAAE,CAC3B,GAAI,CAAAC,QAAQ,CAAGH,cAAc,CAAC,CAAC,CAC/B;AACAG,QAAQ,CAAG,CAAC,GAAGA,QAAQ,CAAED,OAAO,CAAC,CACjCN,kBAAkB,CAAC,UAAU,CAAEO,QAAQ,CAAC,CAC1C,CAEA,KAAM,CAAAC,QAAQ,CAAIC,CAAC,EAAK,CACtB,GAAIC,KAAK,CAACC,OAAO,CAACF,CAAC,CAAC,CAAE,CACpB,MAAO,CAAAA,CAAC,CACV,CACA,MAAO,CAAAA,CAAC,EAAIA,CAAC,CAACG,QAAQ,CACxB,CAAC,CAED;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AAEA,KAAM,CAAAC,QAAQ,CAAIJ,CAAC,EAAK,CACtB,KAAM,CAAAK,WAAW,CAAGV,cAAc,CAAC,CAAC,CACpC,KAAM,CAAAW,SAAS,CAAG,CAAE,GAAGN,CAAC,CAAEO,EAAE,CAAE1C,MAAM,CAAC,CAAC,CAAE2C,KAAK,CAAE9B,QAAS,CAAC,CAAE;AAC3D,KAAM,CAAA+B,cAAc,CAAG,CAAC,GAAGJ,WAAW,CAAEC,SAAS,CAAC,CAClDhB,OAAO,CAACoB,GAAG,CAACV,CAAC,CAAC,CACdV,OAAO,CAACoB,GAAG,CAACD,cAAc,CAAC,CAC3Bb,UAAU,CAACU,SAAS,CAAC,CAAE;AACvBhB,OAAO,CAACoB,GAAG,CAACD,cAAc,CAAC,CAC3BlB,kBAAkB,CAAC,UAAU,CAAEkB,cAAc,CAAC,CAChD,CAAC,CAED,KAAM,CAAAE,SAAS,CAAGA,CAACC,GAAG,CAAEC,QAAQ,GAAK,CACnC,KAAM,CAAAC,MAAM,CAAG,GAAI,CAAAC,UAAU,CAAC,CAAC,CAC/BD,MAAM,CAACE,gBAAgB,CAAC,MAAM,CAAE,IAAMH,QAAQ,CAACC,MAAM,CAACG,MAAM,CAAC,CAAC,CAC9DH,MAAM,CAACI,aAAa,CAACN,GAAG,CAAC,CACzBtB,OAAO,CAACoB,GAAG,CAACI,MAAM,CAACI,aAAa,CAACN,GAAG,CAAC,CAAC,CACxC,CAAC,CAED,KAAM,CAAAO,YAAY,CAAInB,CAAC,EAAK,CAC1B,KAAM,CAAAoB,OAAO,CAAGpB,CAAC,CAACqB,IAAI,CAACC,UAAU,CAAC,QAAQ,CAAC,CAC3C,GAAI,CAACF,OAAO,CAAE,CACZG,OAAO,CAAClC,KAAK,CAAC,kCAAkC,CAAC,CACnD,CACA,MAAO,CAAA+B,OAAO,CAChB,CAAC,CAED,KAAM,CAAAI,iBAAiB,CAAIxB,CAAC,EAAK,CAC/B,GAAIA,CAAC,CAACyB,IAAI,CAACC,MAAM,GAAK,WAAW,CAAE,CACjCjD,UAAU,CAAC,IAAI,CAAC,CAChB,OACF,CACA,GAAIuB,CAAC,CAACyB,IAAI,CAACC,MAAM,GAAK,MAAM,CAAE,CAC5B,GAAI,CAAAZ,MAAM,CAAG,GAAI,CAAAC,UAAU,CAAC,CAAC,CAC7B,GAAI,CAAAU,IAAI,CAAGzB,CAAC,CAAC2B,MAAM,CAACC,KAAK,CAAC,CAAC,CAAC,CAE5Bd,MAAM,CAACe,SAAS,CAAG,IAAM,CACvB,IAAI,CAACC,QAAQ,CAAC,CACZL,IAAI,CAAEA,IAAI,CACV9C,WAAW,CAAEmC,MAAM,CAACG,MACtB,CAAC,CAAC,CACJ,CAAC,CACH,CACF,CAAC,CACD,KAAM,CAAAc,YAAY,cAChB5D,KAAA,QAAK6D,KAAK,CAAE,CAAEC,SAAS,CAAE,QAAS,CAAE,CAAA1D,QAAA,EACjCC,OAAO,cAAGP,IAAA,CAACH,eAAe,GAAE,CAAC,CAAG,IAAI,cACrCK,KAAA,QAAAI,QAAA,eACEN,IAAA,CAACF,YAAY,GAAE,CAAC,UAClB,EAAK,CAAC,EACH,CACN,CAED,mBACEE,IAAA,CAACG,gBAAgB,CAAC8D,QAAQ,EACxB1C,KAAK,CAAE,CACLD,kBAAkB,CAClBT,oBAAoB,CACpBa,cAAc,CACdC,UAAU,CACVG,QAAQ,CACRK,QAAQ,CACRO,SAAS,CACTQ,YAAY,CACZK,iBAAiB,CACjBO,YAAY,CACZnD,IAAI,CACJF,QAAQ,CACRC,WAAW,CACXH,OAAO,CACPC,UACF,CAAE,CAAAF,QAAA,CAEDA,QAAQ,CACgB,CAAC,CAEhC,CAAC,CAED,MAAO,MAAM,CAAA4D,YAAY,CAAGA,CAAA,GAAM,CAChC,KAAM,CAAAC,OAAO,CAAGzE,UAAU,CAACS,gBAAgB,CAAC,CAC5C,GAAI,CAACgE,OAAO,CAAE,CACZ,KAAM,IAAI,CAAAC,KAAK,CAAC,sDAAsD,CAAC,CACzE,CACA,MAAO,CAAAD,OAAO,CAChB,CAAC"},"metadata":{},"sourceType":"module","externalDependencies":[]}